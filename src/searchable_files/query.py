import json

import click
import globus_sdk

from .lib import SEARCH_CLIENT, common_options, prettyprint_json


@click.command(
    "query",
    help=(
        "Perform a search query.\n"
        "This will automatically query the index created with create-index. "
        "This command supports various operations which are specific to the data "
        "generated by searchable-files, but the entire implementation is based  "
        "on standard features of the Globus Search service.\n"
        "You can use a query of '*' to match all data."
    ),
)
@common_options
@click.argument("QUERY_STRING")
@click.option(
    "--index-info-file",
    default="data/index_info.json",
    show_default=True,
    help=(
        "A path, relative to the current working directory, "
        "containing where the index information is stored"
    ),
)
@click.option(
    "--limit", type=int, help="Limit the number of results to return", default=5
)
@click.option("--offset", type=int, help="Starting offset for paging", default=0)
@click.option(
    "--advanced",
    is_flag=True,
    help="Perform the search using the advanced query syntax",
)
@click.option(
    "--types",
    help=(
        "Filter results to files matching ALL of the listed types (comma-delimited). "
        "For example, '--types=text,non-executable'"
    ),
)
@click.option(
    "--types-or",
    help=(
        "Filter results to files matching ANY of the listed types (comma-delimited). "
        "For example, '--types=text,binary'"
    ),
)
@click.option(
    "--extensions",
    help=(
        "Filter results to files with specific extensions. For example "
        "'--extension=txt,png'"
    ),
)
@click.option(
    "--no-auth",
    is_flag=True,
    help=(
        "Make the query unauthenticated. This will hide any results or entries "
        "in results which you are only able to see because you are listed in their "
        "visible_to permissions."
    ),
)
@click.option(
    "--dump-query",
    is_flag=True,
    help="Write the query structure to stdout instead of submitting it to the service",
)
def query_cli(
    query_string,
    index_info_file,
    limit,
    offset,
    advanced,
    types,
    types_or,
    extensions,
    no_auth,
    dump_query,
):
    try:
        with open(index_info_file, "rb") as fp:
            index_info = json.load(fp)
    except FileNotFoundError as e:
        raise click.UsageError(
            "You must create an index with `create-index` first!"
        ) from e
    index_id = index_info["index_id"]

    query_obj = globus_sdk.SearchQuery(
        q=query_string, limit=limit, offset=offset, advanced=advanced
    )
    if types:
        query_obj.add_filter("tags", types.split(","))
    if types_or:
        query_obj.add_filter("tags", types_or.split(","), type="match_any")
    if extensions:  # since files can only have one extension, "match_any"
        query_obj.add_filter("extension", extensions.split(","), type="match_any")

    if dump_query:
        click.echo(prettyprint_json(query_obj))
    else:
        if no_auth:
            client = globus_sdk.SearchClient()
        else:
            client = SEARCH_CLIENT
        click.echo(prettyprint_json(client.post_search(index_id, query_obj).data))
